---
title: "sap_nonspatial_model"
format: html
editor: visual
---

## Comparing Spatial ABM to a Non-Spatial Model

### Setup

Load tidyverse library for easy data manipulation.

```{r}
library(tidyverse)
```

### Create Non-Spatial Model Function

First, we create a function for non-spatial modeling of parasite acquisition and loss, with the following inputs:

-Probability of parasite acquisition (0.5 \* density)

-Probability of parasite loss (recovery rate)

-timesteps / number of draws

```{r}
## write generic function, takes:
# prop - proportion of cells occupied by parasites
# n_hosts - number of hosts in population
# n_times - number of timesteps in each simulation
# infec_prob - probability of parasite acquisition given host contact with parasite
# recov_prob - rate of parasit loss
# n_reps - number of replicate simulations to run
nonspatial_parasite_sim <- function(prop, n_hosts = 96, n_times = 100, 
                                    infec_prob = 0.5, recov_prob, n_reps){
  
  ## create empty host data frame, with a row for each host at each timestep for each simulation replicate
  host_data <- tibble(host = rep(rep(1:n_hosts, each = n_times), n_reps),
                      time = rep(rep(1:n_times, n_hosts), n_reps),
                      rep_id = rep(1:n_reps, each = n_hosts * n_times),
                      prop = prop,
                      infec_prob = infec_prob,
                      recov_prob = recov_prob)
  
  ## add and lose parasites
  infected <- host_data %>%
    ## each host gains parasites via binomial distribution draws
    ## each parasite gets duration from negative binomial draw, compare to timesteps for time of loss
    mutate(parasite_gain = rbinom(n = n(), size = 1, prob = prop * infec_prob),
           duration = rnbinom(n = n(), size = 1, prob = recov_prob),
           lose_point = time + duration,
           lost = parasite_gain * as.numeric(lose_point <= 100)) %>%
    ## group data by host for each simulation replicate, and calculate parasite burdens
    group_by(host, rep_id) %>%
    mutate(cum_burden = cumsum(parasite_gain),
           cum_losses = cumsum(lost),
           cur_burden = cum_burden - cum_losses) %>%
    ## only grab the last timestep, results of simulation
    filter(time == n_times)
  
  return(infected)
}

## test function

test_out <- nonspatial_parasite_sim(prop = 0.9, recov_prob = 0.05, n_reps = 10)
```

### Run many non spatial "simulations"

Now we use the function to run a set of simulations to compare to spatially derived results.

```{r}

## set the same density values and recovery rates as for the spatial model
densities <- rep((1:9)/10, 3)
recovs <- rep(c(0.05, 0.15, 0.25), each = 9)

## run the non-spatial function for the above parameter space
ns_sim_output <- map2(
  .x = densities,
  .y = recovs,
  ~nonspatial_parasite_sim(prop = .x, recov_prob = .y, n_reps = 10)
) %>%
  bind_rows()
```

### Compare Models

Now we can compare the non-spatial and spatial results visually.

```{r}

## read in the spatial model results
recov_sim_data <- read_rds("sim_output/recov_sim_data20230417_132954.rds")


## summarixe results of both models to get dispersion values

spatial_summary <- recov_sim_data %>%
  filter(cluster == 0) %>%
  group_by(prop, rep_id, recov_prob) %>%
  summarize(mean_cur = mean(cur_burden),
            mean_cum = mean(cum_burden),
            var_cur = var(cur_burden),
            var_cum = var(cum_burden),
            disp_cur = var_cur / mean_cur,
            disp_cum = var_cum / mean_cum,
            disp_diff = disp_cur - disp_cum,
            mean_diff = mean_cur - mean_cum,
            var_diff = var_cur - var_cum)

non_spatial_summary <- ns_sim_output %>%
  group_by(prop, rep_id, recov_prob) %>%
  summarize(mean_cur = mean(cur_burden),
            mean_cum = mean(cum_burden),
            var_cur = var(cur_burden),
            var_cum = var(cum_burden),
            disp_cur = var_cur / mean_cur,
            disp_cum = var_cum / mean_cum,
            disp_diff = disp_cur - disp_cum,
            mean_diff = mean_cur - mean_cum,
            var_diff = var_cur - var_cum)

## combine data from both models
comp_summary <- spatial_summary %>%
  mutate(sim_type = "spatial") %>%
  bind_rows(non_spatial_summary %>% mutate(sim_type = "non_spatial"))

## visualize the difference in ending burden dispersion between model types
ggplot(data = comp_summary, aes(x = prop, y = disp_cur, color = sim_type)) +
  geom_jitter(width = 0.01, height = 0) +
  geom_smooth(method = "lm", se = FALSE) +
  facet_wrap(vars(recov_prob), ncol = 3) +
  labs(y = "'Snapshot' Burden Dispersion") +
    scale_x_continuous(name = "Parasite Density",
                     sec.axis = sec_axis(~ . , name = "Recovery Rate", 
                                         breaks = NULL, labels = NULL)) +
  scale_color_viridis_d(name = "Model Type", labels = c("Non-Spatial", "Spatial"), option = "cividis") +
  theme_bw()


```
